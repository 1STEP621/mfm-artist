.button {
  cursor: pointer;
  user-select: none;
  display: flex;
  align-items: center;
}

#add-object {
  width: 100%;
  padding: 7px;
  background-color: var(--gray);
  cursor: pointer;
}

#objects-wrapper {
  background-color: var(--primary-light);
  padding: 10px;
  border-radius: 10px;
  margin-bottom: 20px;
  resize: vertical;
  overflow: auto;
  scrollbar-gutter: stable;
}

#preview {
  background: #2d2d2d;
  padding: 10px;
  border-radius: 10px;
  min-height: 100px;
  border: solid 2px var(--black);
  overflow: hidden;
  resize: both;
  margin: 0 auto 20px auto;
  max-width: 100%;
}

#preview>span {
  display: block;
  font-family: Hiragino Maru Gothic Pro, BIZ UDGothic, Roboto, HelveticaNeue, Arial, sans-serif;
  color: #c7d1d8;
  font-size: .95em;
  line-height: 1.35;
}

#preview *:not(#preview>*) {
  max-width: none;
  display: inline-block;
  line-height: inherit;
  font-family: inherit;
  font-weight: inherit;
  text-decoration: inherit;
  font-style: inherit;
  text-align: inherit;
  font-size: inherit;
  color: inherit;
}

#preview span[style="filter: blur(6px);"] {
  transition: filter 0.3s ease-in-out;
}

#preview span[style="filter: blur(6px);"]:hover {
  filter: none !important;
}

#preview span[style="text-align: center;"] {
  display: block !important;
}

textarea {
  width: 100%;
  resize: none;
  overflow-y: auto;
  padding: 15px;
  font-family: "Noto Sans JP";
  border: 0;
  outline: solid 1px var(--primary-deep);
  border-radius: 10px;
}

#domain-input-wrapper {
  display: flex;
  gap: 10px;
  margin-bottom: 20px;
}

h2 {
  margin-bottom: 20px;
}

.object {
  display: flex;
  flex-direction: column;
  margin-bottom: 10px;
  padding: 10px;
  background-color: #5596a921;
  border-radius: 10px;
}

.object-controls-wrapper {
  display: flex;
  flex-direction: row;
  margin-bottom: 10px;
}

.object-settings-wrapper {
  display: flex;
  justify-content: center;
  flex-direction: column;
  gap: 10px;
}

input, select {
  font-family: 'Noto Sans JP';
  color: var(--black);
}

input[type="number"] {
  border: 0;
  background-color: var(--primary-light);
  width: 100px;
  text-align: center;
  border-radius: 10px;
  padding: 5px 10px;
}

input[type="radio"] {
  accent-color: var(--primary-deep);
  cursor: pointer;
}

label {
  user-select: none;
  cursor: pointer;
}

input[type="checkbox"] {
  accent-color: var(--primary-deep);
  cursor: pointer;
  margin-right: 5px;
}

select {
  border: 0;
  background-color: var(--primary-light);
  text-align: center;
  border-radius: 10px;
  padding: 5px 10px;
  width: 200px;
}

input[type="color"] {
  border: 0;
  background-color: transparent;
  padding: 0;
  vertical-align: -10px;
  width: 200px;
  height: 37px;
}

.object-input {
  flex: 1;
  min-width: 0;
  background-color: transparent;
  border: solid 1px var(--primary-deep);
  border-radius: 10px 0px 0px 10px;
  padding: 5px 15px;
  caret-color: var(--primary-deep);
}

.object-input::placeholder {
  color: var(--primary-deep);
}

.object-setting {
  border-radius: 0px;
  padding: 10px;
}

.object-setting-group {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 20px;
  flex-wrap: wrap;
  gap: 10px;
}

.object-delete {
  border-radius: 0 10px 10px 0;
  padding: 10px;
  background-color: #c53b12;
}

#result {
  margin-bottom: 20px;
  min-height: 100px;
}

.emoji {
  height: 2em;
}

.emoji[src*=twemoji] {
  height: 1.25em;
  vertical-align: -0.25em;
}

*[hidden] {
  display: none !important;
}

body {
  overflow-y: scroll;
}

.object-effects-wrapper {
  padding: 10px;
  background-color: var(--primary-light);
  border-radius: 10px;
  resize: vertical;
  overflow-y: auto;
  scrollbar-gutter: stable;
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.add-effect {
  padding: 7px;
}

.add-effect .ti-wand {
  margin-right: 10px;
}

.object-effect {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.object-effect-input {
  flex: 1;
  display: flex;
}

.effect-type {
  flex: 1;
  background-color: #d7eaf1;
  border-radius: 10px 0 0 10px;
}

.effect-delete {
  border-radius: 0 10px 10px 0;
  padding: 10px;
  background-color: #c53b12;
}

.object-effect-setting {
  display: flex;
  align-items: center;
  justify-content: space-around;
  flex-wrap: wrap;
  gap: 10px;
}

.object-effect-setting>div {
  display: flex;
  align-items: center;
}

.object-effect-setting :is(input, select) {
  background-color: #d7eaf1;
}

:invalid {
  background-color: #c53c1244 !important;
}

/* https://github.com/misskey-dev/misskey/blob/develop/packages/frontend/src/style.scss より改変 */
/* 以下のコードはAGPL-3.0でライセンスされています。 */
@keyframes tada {
  0% {
    transform: scaleZ(1)
  }

  10%,20% {
    transform: scale3d(.9,.9,.9) rotate3d(0,0,1,-3deg)
  }

  30%,50%,70%,90% {
    transform: scale3d(1.1,1.1,1.1) rotate3d(0,0,1,3deg)
  }

  40%,60%,80% {
    transform: scale3d(1.1,1.1,1.1) rotate3d(0,0,1,-3deg)
  }

  to {
    transform: scaleZ(1)
  }
}

@keyframes bounce {
  0% {
    transform: scaleX(.9) scaleY(.9)
  }

  19% {
    transform: scaleX(1.1) scaleY(1.1)
  }

  48% {
    transform: scaleX(.95) scaleY(.95)
  }

  to {
    transform: scaleX(1) scaleY(1)
  }
}

@keyframes spin-x {
  0% {
    transform: perspective(128px) rotateX(0)
  }

  to {
    transform: perspective(128px) rotateX(360deg)
  }
}

@keyframes spin-y {
  0% {
    transform: perspective(128px) rotateY(0)
  }

  to {
    transform: perspective(128px) rotateY(360deg)
  }
}

@keyframes spin-z {
  0% {
    transform: rotate(0)
  }

  to {
    transform: rotate(360deg)
  }
}

@keyframes jump {
  0% {
    transform: translateY(0)
  }

  25% {
    transform: translateY(-16px)
  }

  50% {
    transform: translateY(0)
  }

  75% {
    transform: translateY(-8px)
  }

  to {
    transform: translateY(0)
  }
}

@keyframes bounce {
  0% {
    transform: translateY(0) scale(1)
  }

  25% {
    transform: translateY(-16px) scale(1)
  }

  50% {
    transform: translateY(0) scale(1)
  }

  75% {
    transform: translateY(0) scale(1.5,.75)
  }

  to {
    transform: translateY(0) scale(1)
  }
}

@keyframes twitch {
  0% {
    transform: translate(7px,-2px)
  }

  5% {
    transform: translate(-3px,1px)
  }

  10% {
    transform: translate(-7px,-1px)
  }

  15% {
    transform: translateY(-1px)
  }

  20% {
    transform: translate(-8px,6px)
  }

  25% {
    transform: translate(-4px,-3px)
  }

  30% {
    transform: translate(-4px,-6px)
  }

  35% {
    transform: translate(-8px,-8px)
  }

  40% {
    transform: translate(4px,6px)
  }

  45% {
    transform: translate(-3px,1px)
  }

  50% {
    transform: translate(2px,-10px)
  }

  55% {
    transform: translate(-7px)
  }

  60% {
    transform: translate(-2px,4px)
  }

  65% {
    transform: translate(3px,-8px)
  }

  70% {
    transform: translate(6px,7px)
  }

  75% {
    transform: translate(-7px,-2px)
  }

  80% {
    transform: translate(-7px,-8px)
  }

  85% {
    transform: translate(9px,3px)
  }

  90% {
    transform: translate(-3px,-2px)
  }

  95% {
    transform: translate(-10px,2px)
  }

  to {
    transform: translate(-2px,-6px)
  }
}

@keyframes shake {
  0% {
    transform: translate(-3px,-1px) rotate(-8deg)
  }

  5% {
    transform: translateY(-1px) rotate(-10deg)
  }

  10% {
    transform: translate(1px,-3px) rotate(0)
  }

  15% {
    transform: translate(1px,1px) rotate(11deg)
  }

  20% {
    transform: translate(-2px,1px) rotate(1deg)
  }

  25% {
    transform: translate(-1px,-2px) rotate(-2deg)
  }

  30% {
    transform: translate(-1px,2px) rotate(-3deg)
  }

  35% {
    transform: translate(2px,1px) rotate(6deg)
  }

  40% {
    transform: translate(-2px,-3px) rotate(-9deg)
  }

  45% {
    transform: translateY(-1px) rotate(-12deg)
  }

  50% {
    transform: translate(1px,2px) rotate(10deg)
  }

  55% {
    transform: translateY(-3px) rotate(8deg)
  }

  60% {
    transform: translate(1px,-1px) rotate(8deg)
  }

  65% {
    transform: translateY(-1px) rotate(-7deg)
  }

  70% {
    transform: translate(-1px,-3px) rotate(6deg)
  }

  75% {
    transform: translateY(-2px) rotate(4deg)
  }

  80% {
    transform: translate(-2px,-1px) rotate(3deg)
  }

  85% {
    transform: translate(1px,-3px) rotate(-10deg)
  }

  90% {
    transform: translate(1px) rotate(3deg)
  }

  95% {
    transform: translate(-2px) rotate(-3deg)
  }

  to {
    transform: translate(2px,1px) rotate(2deg)
  }
}

@keyframes jelly {
  0% {
    transform: scaleZ(1)
  }

  30% {
    transform: scale3d(1.25,.75,1)
  }

  40% {
    transform: scale3d(.75,1.25,1)
  }

  50% {
    transform: scale3d(1.15,.85,1)
  }

  65% {
    transform: scale3d(.95,1.05,1)
  }

  75% {
    transform: scale3d(1.05,.95,1)
  }

  to {
    transform: scaleZ(1)
  }
}

@keyframes rainbow {
  0% {
    filter: hue-rotate(0deg) contrast(150%) saturate(150%)
  }

  to {
    filter: hue-rotate(360deg) contrast(150%) saturate(150%)
  }
}